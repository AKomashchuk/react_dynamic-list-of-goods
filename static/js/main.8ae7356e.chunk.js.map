{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","App","useState","setGoods","getAllGoods","a","data","getFirst5Goods","sort","good1","good2","localeCompare","slice","getRedColorGoods","filter","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAkBC,MAAO,CAAEC,MAAOF,EAAKE,OAAS,UAAQ,OAAxD,SACGF,EAAKG,MADCH,EAAKI,UCLb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICHMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOb,EAAP,KAAcc,EAAd,KAEMC,EAAW,uCAAG,4BAAAC,EAAA,sEACCT,IADD,OACZU,EADY,OAGlBH,EAASG,GAHS,2CAAH,qDAMXC,EAAc,uCAAG,4BAAAF,EAAA,sEDLhBT,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMmB,MACnB,SAACC,EAAOC,GAAR,OAAkBD,EAAMf,KAAKiB,cAAcD,EAAMhB,YAElDI,MAAK,SAAAT,GAAK,OAAIA,EAAMuB,MAAM,EAAG,MCCT,OACfN,EADe,OAGrBH,EAASG,GAHY,2CAAH,qDAMdO,EAAgB,uCAAG,4BAAAR,EAAA,sEDHlBT,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMyB,QAAO,SAAAvB,GAAI,MAAmB,QAAfA,EAAKE,YCElB,OACjBa,EADiB,OAGvBH,EAASG,GAHc,2CAAH,qDAMtB,OACE,sBAAKS,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,mCAEA,sBAAKA,UAAU,oBAAf,UACE,wBACEA,UAAU,oBACVC,KAAK,SACL,UAAQ,aACRC,QAASb,EAJX,4BASA,wBACEW,UAAU,oBACVC,KAAK,SACL,UAAQ,oBACRC,QAASV,EAJX,gCASA,wBACEQ,UAAU,oBACVC,KAAK,SACL,UAAQ,aACRC,QAASJ,EAJX,+BAUF,cAAC,EAAD,CAAWxB,MAAOA,QC1DxB6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8ae7356e.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id} style={{ color: good.color }} data-cy=\"good\">\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort(\n      (good1, good2) => good1.name.localeCompare(good2.name),\n    ))\n    .then(goods => goods.slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const getAllGoods = async () => {\n    const data = await getAll();\n\n    setGoods(data);\n  };\n\n  const getFirst5Goods = async () => {\n    const data = await get5First();\n\n    setGoods(data);\n  };\n\n  const getRedColorGoods = async () => {\n    const data = await getRedGoods();\n\n    setGoods(data);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Dynamic list of Goods</h1>\n\n      <div className=\"container-buttons\">\n        <button\n          className=\"button is-rounded\"\n          type=\"button\"\n          data-cy=\"all-button\"\n          onClick={getAllGoods}\n        >\n          Load all goods\n        </button>\n\n        <button\n          className=\"button is-rounded\"\n          type=\"button\"\n          data-cy=\"first-five-button\"\n          onClick={getFirst5Goods}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          className=\"button is-rounded\"\n          type=\"button\"\n          data-cy=\"red-button\"\n          onClick={getRedColorGoods}\n        >\n          Load red goods\n        </button>\n      </div>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}